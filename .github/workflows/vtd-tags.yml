name: vtd tag

on:
  repository_dispatch:
    types:
      - vtd-trigger
      - refs/tags/**

env:
  # TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
  # TELEGRAM_GROUP_ID: ${{ vars.TELEGRAM_GROUP_ID}}
  # TELEGRAM_TOPIC_ID: ${{ vars.TELEGRAM_TOPIC_ID}}
  REF_NAME: ${{ github.event.client_payload.ref_name}}
  TAG_NAME: ${{ github.event.client_payload.tag_name}}
  TRIGGERING_ACTOR: ${{ github.event.client_payload.triggering_actor}}

jobs:
  build-and-check:
    name: ${{ matrix.name }}
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(vars.STRATEGY_MATRIX_SERVICES) }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.VTD_REPOSITORY_SOURCE }}
          token: ${{ secrets.GH_PAT }}
          ref: ${{ env.TAG_NAME }}
          path: source

      - name: Checkout target
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.VTD_REPOSITORY_TARGET }}${{ matrix.service }}
          token: ${{ secrets.GH_PAT }}
          ref: ${{ env.REF_NAME }}
          path: target

      - name: Setup java 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Remove the rest code
        run: |
          mkdir code_package_temp
          mv -v source/${{ secrets.SERVICE_PACKAGE_PATH }}/* code_package_temp
          mv code_package_temp/main source/${{ secrets.SERVICE_PACKAGE_PATH }}/
          mv code_package_temp/Application.java source/${{ secrets.SERVICE_PACKAGE_PATH }}/
          mv code_package_temp/ConfigProperties.java source/${{ secrets.SERVICE_PACKAGE_PATH }}/
          mv code_package_temp/${{ matrix.package }} source/${{ secrets.SERVICE_PACKAGE_PATH }}/

      - name: Remove the test packages
        run: |
          mkdir test_package_temp
          mv -v source/${{ secrets.SERVICE_TEST_PACKAGE_PATH }}/* test_package_temp
          mv test_package_temp/main source/${{ secrets.SERVICE_TEST_PACKAGE_PATH }}/
          mv test_package_temp/${{ matrix.package }} source/${{ secrets.SERVICE_TEST_PACKAGE_PATH }}/

      - name: Remove the rest overlays
        run: |
          mkdir overlay_temp
          mv -v source/overlays/* overlay_temp
          mv overlay_temp/${{ matrix.service }} source/overlays/

      - name: Build and package project
        working-directory: source
        run: |
          echo "${{ secrets.ENV_PROPERTIES }}" > src/main/resources/application-dev-base64.properties
          cat src/main/resources/application-dev-base64.properties | base64 -d > src/main/resources/application-dev.properties
          mvn -f pom.xml clean install package -q

      - name: Move code to the result
        run: |
          mkdir result
          mv target/.git result/
          rm -rf source/.git
          shopt -s dotglob
          mv -v source/* result/

      - name: Push result
        working-directory: result
        run: |
          git config user.name "GitHub Actions" --local
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com" --local
          git add -A
          git diff-index --quiet HEAD || git commit -m ':white_check_mark: update code'
          git push origin ${{ env.REF_NAME }} -f
          git tag -a ${{ env.TAG_NAME }} -m 'Bump version to ${{ env.TAG_NAME }}' 
          git push origin ${{ env.TAG_NAME }}
